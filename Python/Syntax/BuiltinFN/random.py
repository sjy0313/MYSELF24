# -*- coding: utf-8 -*-
"""
Created on Fri Mar 15 11:31:52 2024

@author: Shin
"""

# random() , randint()
# 난수(규칙이 없는 임의의 수)를 발생시키는 모듈
#%%
# random() : 0~1.0 사이의 값, 1.0보다 작은 값

import random

for n in range(10):
    x = random.random()
    print(x)
    """
    0.7821153065588374
    0.6532051116238194
    0.5023584691621799
    0.49728720470666055
    0.8359896789676603
    0.8933671960105994
    0.2058847665847825
    0.9841879000291944
    0.9389339823293302
    0.3481986933102812
    """
    
#%%

# 1부터 6까지 숫자를 2번 발생시켜라 y.xf: 소수점 이하 x자리까지만 표현/ y는 문자의 자릿수의 개수설정
for n in range(2):
    x = random.random()
    y = x * 6
    z = int(y) + 1
    print(f"{z}: {x:.5f}, {y:.5f}")
#%%
# 0부터 10까지 숫자를 20번 발생시켜라 
# 소숫점 5자리 이하 버리고 발생된 난수 출력: trunc() d = 정수/ f = 부동소수
# random() : 0~1.0 사이의 값, 1.0보다 작은 값
# import math # 수학 모듈     x = trunc(x, 5) # 소숫점 5자리 절사
# round(number[,ndigits]) 숫자를 입력받아 반올림해 리턴하는 함수 round(x, 5) 
# 소숫점 5자리 반올림
s = 10 # 시작값
e = 20 # 마지막값
m = 20 # 발생 횟수

for n in range(20):
    x = random.random() # 난수생성
    y = x * (e-s+1) # 경우의 갯수로 환산(0이상 10미만의 난수생성) 
    z = int(y) + s # 정수만 가져오기
    rx = round(x, 5) # 소숫점 5자리 반올림
    print(f"{z:2d}: {rx}, {y:.5f}")
    
#%% 
# 위의 불편함을 해소위해 random int 활용


    
    
    
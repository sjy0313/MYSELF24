is double(c1)
is.double(c1)
c1 <- c(1,2,3,4,5) #double(실수)
c2 <- c(1:5)       #integer(정수)
cn <- c(1L, 2L, 3L, 4L, 5L) #integer(l)
is.double(c1)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
c1 <- c(1,2,3,4,5) #double(실수)
c2 <- c(1:5)       #integer(정수)
cn <- c(1L, 2L, 3L, 4L, 5L) #integer(l)
is.double(c1)
is.double(c2)
is.double(cn)
c1 <- c(1,2,3,4,5) #double(실수)
c2 <- c(1:5)       #integer(정수)
cn <- c(1L, 2L, 3L, 4L, 5L) #integer(l)
is.double(c1)
is.double(c2)
is.double(cn)
is.integer(cn, c2)
is.integer(cn)
#sequence value
#seq(시작값, 종료값, 증가값)
s1 <-seq(1,10,1)　
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
#
cr1 <- c(rep(seq(2,8,2)2),10)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
cr1 <- c(rep(seq(2,8,2),2),10)
cr1 # 2 4 6 8 2 4 6 8 10
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s08-data-vector1.R", echo=TRUE)
is.double(cm2)
cm2 <- c(1L, 2L, 3)
cm2
is.double(cm2)
v <- c(1,3,5,7,9)
v # 1 3 5 7 9
v[0] #numeric(0)
v <- c(1,3,5,7,9)
v # 1 3 5 7 9
v[0] #numeric(0)
v[1] # 1
v[2] # 3
v[3] # 5
v[4] # 7
v[5] # 9
v[0]
vx <- v[0] + 10
source("~/.active-rstudio-document", echo=TRUE)
vt <- v[1] + v[2] + v[3] + v[4] + v[5]
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector2.R", echo=TRUE)
vt2 <- sum(v)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector2.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector2.R", echo=TRUE)
vl <- length(v)
ve <- v[vl]
#슬라이스
ㅍ[1:vl]
v[1:vl]
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector2.R", echo=TRUE)
# 백터(vector)
#참조: 첨자(index)는 1부터 시작
v <- c(1,3,5,7,9)
v # 1 3 5 7 9
v[0]
# 0으로 참조를 하면 #numeric(0) 값이없음을 의미
vx <- v[0] + 10 #numeric(empty)
vt <- v[1] + v[2] + v[3] + v[4] + v[5] #25
v[1] # 1
v[2] # 3
v[3] # 5
v[4] # 7
v[5] # 9
vt2 <- sum(v)
#길이 : 백터의 길이
vl <- length(v)
vl # 5 벡터의 길이는 데이터의 크기를 나타내며, 벡터 간의 거리나 유사성을 계산하는 데에 활용됩니다.
#평균
va <- sum(v) / length(v)
va # 5
#맨마지막 요소의 값
ve <- v[vl]
#슬라이스
v[1:vl] # 1 3 5 7 9
v[2:4] # 3 5 7 ( shift 아래화살표 해당 택스트 전체선택)
#상대참조( 지정한 위치에서의 해당하는 값 도출 가능)
rc <- c(2:4)
rc # 2 3 4
v[rc] # 3 5 7
# 백터(vector)
#참조: 첨자(index)는 1부터 시작
v <- c(1,3,5,7,9)
v # 1 3 5 7 9
v[0]
# 0으로 참조를 하면 #numeric(0) 값이없음을 의미
vx <- v[0] + 10 #numeric(empty)
vt <- v[1] + v[2] + v[3] + v[4] + v[5] #25
v[1] # 1
v[2] # 3
v[3] # 5
v[4] # 7
v[5] # 9
vt2 <- sum(v)
#길이 : 백터의 길이
vl <- length(v)
vl # 5 벡터의 길이는 데이터의 크기를 나타내며, 벡터 간의 거리나 유사성을 계산하는 데에 활용됩니다.
#평균
va <- sum(v) / length(v)
va # 5
#맨마지막 요소의 값
ve <- v[vl]
#슬라이스
v[1:vl] # 1 3 5 7 9
v[2:4] # 3 5 7 ( shift 아래화살표 해당 택스트 전체선택)
#상대참조( 지정한 위치에서의 해당하는 값 도출 가능)
rc <- c(2:4)
rc # 2 3 4
v[rc] # 3 5 7
v[c(1,3,5)] # 1 5 9
v10 <- c(1:10)
v10[c(2,4,6)]
v10 <- c(a:f)
v10 <- c('a':'f')
v10 <- c('a', 'b', 'c', 'd', 'e')
v10[c(1,3,5)]
v10[seq(1,length(v10),20)]
v10[seq(1,length(v10),2)]
v10[seq(1,length(v10),2)]
v10[seq(2,length(v10),2)]
v10[-3]
v10 <- v10[-length(v10)]
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector2.R", echo=TRUE)
v10 <- v10[-length(v10)]
v10 <- v10[length(v10) * -1]
v10 <- v10[-length(v10)]
v10 <- v10[-length(v10)]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- c('a', 'b', 'c', 'd', 'e')
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
v10 <- v10[length(v10) * -1]
# 알파벳 소문자 백터:
letters
ap <- letters
ap <- letters
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
ace <- ap[c(1,3,5)]
ace
ace[1]
ace[2]
ace[3]
#백터에 원소를 추가
ace[10] <- 'z'
ace[10] <- 'z'
ace[10] <- 'z'
#NA로 채원진 빈 공간을 삭제
ace[-c(4:9)]
#NA로 채원진 빈 공간을 삭제
ace[-c(4:8)]
ace[1] <- 'A'
ace
ace[10]
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector4.R", echo=TRUE)
n <- c(1,3,5,7)
m <- c(3,5,9)
nm <- union(n,m)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-vector4.R", echo=TRUE)
#차집합: setdiff()
#n에는 있고 m에는 없는 데이터
ndm <- setdiff(n,m)
nmc
nmc <- c(n,m)
nmc
nmx <- setdiff(nmc, intersect(n,m))
nmx #  1 7 9
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s09-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
mx <- matrix(c(1:6))
mx <- matrix(c(1:6))
mx <- matrix(c(1:6))
mx
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s010-data-matrix1.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
m32
source("~/.active-rstudio-document", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix3.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix3.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix3.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix3.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix4.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix4.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix4.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix4.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
mx[2:3,2:3] #
mx
mx[2:3,2:3] #
mx
mx[2:3,2:3]
mx
mx[2:3,2:3]
mx
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix7.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
#
ax[1,,1:2] : 1행, 모든 열, 모든 면
ax[1,,1:2]
n <- c(1:10)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
sum(1,(1:10),2)
sum
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
sum_n(1,(1:10),2)
v10[seq(1,length(v10),2)]#홀수번째
v10 <- c('a', 'b', 'c', 'd', 'e')
v10[c(1,3,5)] # "a" "c" "e"
v10[seq(1,length(v10),2)]#홀수번째
v10
n <- c(1:10)
# n
# [1]  1  2  3  4  5  6  7  8  9 10
n{(sum)seq[1,length(n),2]
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
sum_odd <- sum(n[seq(1, length(n), 2)])
sum_odd
sum_even <- sum(n[seq(2, length(n),2])
sum_even <- sum(n[seq(2, length(n), 2)])
sum_even
m42 <- matrix(c(1:6),nrow=4)
m42
mx <- matrix(c(1:6))
mx
mx44 <- matrix(c(1:16), nrow=4)
mx44
mx44 <- mat(1:16, nrow=4, ncol=4)
mx44 <- matrix(1:16, nrow=4, ncol=4)
mx44
mat <- matrix(1:6, nrow = 2, ncol = 3)
mat
my_list <- list("apple", "banana", "cherry")
length(my_list)  # 리스트의 길이 출력
mat <- matrix(1:6, nrow = 2, ncol = 3)
mat
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s10-data-matrix6.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/sxx-examine.1.R", echo=TRUE)
sum_row <- sum(mx44[1,c(1:4)])
sum_row
sum_row2 <- sum(mx44[c(1:4),c(1:4)]
sum_row2
sum_row2 <- sum(mx44[c(1:4),c(1:4)])
sum_row2
sum_row3 <- sum(mx44[1,])
sum_row3
sum_row2 <- sum(mx44[2,])
sum_row2
apply(mx44, 1, sum)
apply(mx44, 2, sum)
apply(mx44, 1, mean)
apply(mx44, 2, mean)
matrix(data=1:12, nrow=3, ncol=2, byrow=T)
matrix
matrix(data=1:12, nrow=3, ncol=2, byrow=T)
arfx <- array(1:12, dim = c(3,2,2))
sum1 <- apply(arfx, c(3,1), sum)
sum1
nx <- seq(1,10,2)
ax <- c('a', 'b', 'c')
lt <- list(nx, ax)
lt
[[1]]
ssl <- list('이순신', '조선의 장군', 55)
ssl
SS12 <- list(name='이순신', title='조선의 장군', age=55)
SS12
ss12[[3]]
SS12 <- list(name='이순신', title='조선의 장군', age=55)
SS12
ss12[[4]]
SS12 <- list(name='이순신', title='조선의 장군', age=55)
SS12
#ss12[[4]]
ss12
SS12$tel
lx <- list(a=nx, b=nx, c=lt)
nx <- seq(1,10,2)
ax <- c('a', 'b', 'c')
lt <- list(nx, ax)
lx <- list(a=nx, b=nx, c=lt)
lx
lx$a
lx$c[[1]]
lx$c <- "new element"
lx
lx$a <- NULL
lx
lx$d[6] <- 12
lx$d[6] <- 12
lx$d
lx$d <- seq(2,10,2)
lx$d[6] <- 12
lx$d
no <- c(1,2,3)
name <- c('Kim', "Lee", "Chol")
pay <- c(200,300,400)
#dataframe
emp <- data.frame(No=no, Name=name, Pay=pay)
emp
str(emp)
#컬럼의 갯수
ncol(emp)
$ Pay : num  200 300 400
summary(emp)
#참조: 컬럼
emp$No
emp$Name
emp$Pay
mx <- matrix(c(1, '홍길동', 100, 2, '이순신', 200, 3, '강감찬', 400), nrow=3, byrow=T
mx
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
#행번호를 통한 데이터 참조
emp[1,]
#열번호를 통한 데이터 참조
emp[,1]
#범위지정
emp[2:3, 2:3] #2,3행, 2,3열
#특정 컬럼의 자료형을 변경
emp$급여 <- as.numeric(emp$급여)
mode(emp$급여)
emp$급여
mx <- matrix(c(1, '홍길동', 100,
2, '이순신', 200,
3, '강감찬', 400), nrow=3, byrow=T)
mx
mx <- matrix(c(color, landscape, occupied))
source("~/.active-rstudio-document", echo=TRUE)
mx <- matrix(c('color', 'landscape', 'occupied'))
mx <- matrix(c('color', 'landscape', 'occupied'))
mx
mx
mx <- matrix(c('color', 'landscape', 'occupied'), nrow3, ncol3, byrow=F)
mx <- matrix(c('color', 'landscape', 'occupied'), ncol3, byrow=F)
mx <- matrix(c('color', 'landscape', 'occupied'),nrow=3, ncol=3, byrow=F)
mx
'color' <- ('green', 'blue', 'white')
source("~/.active-rstudio-document", echo=TRUE)
'color' <- c('green', 'blue', 'white')
'landscape' <- c(trees, sky, water)
emp <- data.frame(Color=color, Landscape=landscape, Occupied=occupied)
emp <- data.frame(Color=color, Landscape=landscape, Occupied=occupied)
color <- c('green', 'blue', 'white')
landscape <- c(trees, sky, water)
color <- c('green', 'blue', 'white')
landscape <- c('trees', 'sky','water')
occupied <- c(2/10, 5/10, 3/10)
emp <- data.frame(color=color, Landscape=landscape, Occupied=occupied)
emp
mode(emp)
str(emp)
sum_of_num <- apply(emp,c(1,3),sum)
sum_of_num <- apply(emp,c(1,'Occupied'),sum)
sum_of_num <- apply(emp,emp[,1],sum)
sum_of_num <- lappy(emp$Occupied, sum)
sum_of_num <- lapply(emp$Occupied, sum)
sum_of_num
df
source("~/.active-rstudio-document", echo=TRUE)
df <- data.frame(x=c(1:5), y=seq(2,10,2), z=letter[1:5]
df
source("~/.active-rstudio-document", echo=TRUE)
df <- data.frame(x=c(1:5), y=seq(2,10,2), z=letter[1:5])
df <- data.frame(x=c(1:5), y=seq(2,10,2), z=letter[1:5])
df <- data.frame(x=c(1:5), y=seq(2,10,2), z=letters[1:5])
df
summary(df)
#모든 행의 컬럼(1,2) 즉 x, y의 요소를 선택
df[,c(1,2)], 1, sum)
#모든 행의 컬럼(1,2) 즉 x, y의 요소를 선택
df[,c(1,2)]
#평균
apply(df[,c(1,2)], MARGIN = 1, mean)
#x,y의 열 단위
apply(df[,c(1,2), MARGIN=2, sum)
#x,y의 열 단위
apply(df[,c(1,2)],MARGIN=2, sum)
sum_of_occupied
sum_of_occupied <- apply(df[3],1, sum)
color <- c('green', 'blue', 'white')
landscape <- c('trees', 'sky','water')
occupied <- c(2/10, 5/10, 3/10)
emp <- data.frame(color=color, Landscape=landscape, Occupied=occupied)
emp
color Landscape Occupied
sum_of_occupied <- apply(emp[, 'Occupied' drop=FALSE],2,sum)
sum_of_occupied <- apply(emp[, 'Occupied', drop=FALSE],2,sum)
sum_of_occupied
# x  y
# 15 30
apply(df[,c(1,2)],MARGIN=2, mean)
sum_of_occupied <- sum(emp$Occupied)
sum_of_occupied <- sum(emp$Occupied)
sum_of_occupied
m
m <- x %% y
source("D:/WORKSPACE(SHIN)/R-textmining/workscripts/s14-operator.R", echo=TRUE)
<- 10
x <- 10
y <- 3
z <- x/y
z # 3.333333
#나머지
m <- x %% y
m # 1 <- 10 %% 3
#몫
m <- x %/% y
m
몫
x <- 10
y <- 3
#몫
m <- as.integer(x/y)
m
x <- 15
y <- 4
#몫
m <- as.integer(x/y)
m # 3
#나머지
n <- x - (m*y)
n
az <- !a < b & a < c
az
n1 <- !20
n1
cz <- !1<2 & 1<3
cz
cy <- !1<2 & 1>3
cz
cy <- !1>2 & 1>3
cz
cy <- !(1)>2 | 1>3
cz
eq <- a & b
eq
%in% v
# x %in% v
in3 <- 3 %in% a
in3
